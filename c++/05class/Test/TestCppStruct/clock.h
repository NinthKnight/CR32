#pragma once

//c++中，对结构体进行了扩展，允许在结构体中写函数
//访问权限：对结构体/类中的数据或函数的访问加以限制
//1. public: 公有权限，可以随意访问（类里，类外）
//2. protected: 保护权限， 与继承有关，（限制儿子可以访问）
//3. private: 私有权限，自己（类里）可以访问

// 结构体与类的区别： 默认的访问权限不同
// 1. 结构体：默认公有 public
// 2. 类 ： 默认私有 private
// 通常数据私有，部分成员函数公有（接口函数）
// 对于访问权限的检查是编译期而不是运行期

// 类的大小 = 与结构体大小一样（结构体的的对齐方式）（暂时）
// 成员函数地址是一样的，表示同一个类的对象的成员函数是共用的
//（1）数据是独立的。
//（2）成员函数是共用的。

// 成员函数调用时会偷偷的传递this指针，通过寄存器ecx传递，这种传递方式称之为thiscall

// 成员函数指针的定义：
// 1. vc6: 对象.成员函数名 cl1.SetTime（废弃）
// 2. vs: 类名::成员函数名 &tagClock::SetTime
// 成员函数指针的使用：
// 对象调用：(cl1.*pfn_class)(1, 2, 3);
// 对象指针调用：(pCL->*pfn_class)(1, 2, 3);

class tagClock {

private:
    //数据
    int nHour;
    int nMinute;
    int nSecond;

public:
    //行为,函数声明
    int __stdcall SetTime(int nH, int nM, int nS);
};